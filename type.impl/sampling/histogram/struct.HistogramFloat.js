(function() {
    var type_impls = Object.fromEntries([["sampling",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#11\">Source</a><a href=\"#impl-Clone-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#11\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#11\">Source</a><a href=\"#impl-Debug-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#11\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#12\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#12\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAtomicHistogramFloat%3CT%3E%3E-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#19-30\">Source</a><a href=\"#impl-From%3CAtomicHistogramFloat%3CT%3E%3E-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sampling/histogram/struct.AtomicHistogramFloat.html\" title=\"struct sampling::histogram::AtomicHistogramFloat\">AtomicHistogramFloat</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#21-29\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"struct\" href=\"sampling/histogram/struct.AtomicHistogramFloat.html\" title=\"struct sampling::histogram::AtomicHistogramFloat\">AtomicHistogramFloat</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AtomicHistogramFloat<T>>","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Histogram-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#165-197\">Source</a><a href=\"#impl-Histogram-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sampling/histogram/trait.Histogram.html\" title=\"trait sampling::histogram::Histogram\">Histogram</a> for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#168-170\">Source</a><a href=\"#method.bin_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#method.bin_count\" class=\"fn\">bin_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>How many bins the histogram contains <a href=\"sampling/histogram/trait.Histogram.html#method.bin_count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#173-175\">Source</a><a href=\"#method.hist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#tymethod.hist\" class=\"fn\">hist</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>the created histogram <a href=\"sampling/histogram/trait.Histogram.html#tymethod.hist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_index_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#178-186\">Source</a><a href=\"#method.increment_index_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#tymethod.increment_index_by\" class=\"fn\">increment_index_by</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class='docblock'><code>self.hist[index] += count</code>, <code>Err()</code> if <code>index</code> out of bounds <a href=\"sampling/histogram/trait.Histogram.html#tymethod.increment_index_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#189-194\">Source</a><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#tymethod.reset\" class=\"fn\">reset</a>(&amp;mut self)</h4></section></summary><div class='docblock'>reset the histogram to zero</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_traits.rs.html#18-20\">Source</a><a href=\"#method.increment_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#method.increment_index\" class=\"fn\">increment_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class='docblock'><code>self.hist[index] += 1</code>, <code>Err()</code> if <code>index</code> out of bounds <a href=\"sampling/histogram/trait.Histogram.html#method.increment_index\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any_bin_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_traits.rs.html#37-42\">Source</a><a href=\"#method.any_bin_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.Histogram.html#method.any_bin_zero\" class=\"fn\">any_bin_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>check if any bin was not hit yet</div></details></div></details>","Histogram","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#32-38\">Source</a><a href=\"#impl-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borders\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#34-37\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.borders\" class=\"fn\">borders</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>similar to <code>self.borders_clone</code> but does not allocate memory</p>\n</div></details></div></details>",0,"sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#48-163\">Source</a><a href=\"#impl-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#54-84\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.new\" class=\"fn\">new</a>(left: T, right: T, bins: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"create-a-new-histogram\"><a class=\"doc-anchor\" href=\"#create-a-new-histogram\">§</a>Create a new Histogram</h5>\n<ul>\n<li>right exclusive, left inclusive</li>\n<li>if you want <code>right</code> to behave (almost) the same as an inclusive border,\nconsider using <code>new(left, right + T::EPSILON, bins)</code> (make sure, that adding Epsilon actually changes the value!)</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.interval_length\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#87-90\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.interval_length\" class=\"fn\">interval_length</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the length of the interval</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#109-112\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.bin_iter\" class=\"fn\">bin_iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">[T; 2]</a>&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"iterator-over-all-the-bins\"><a class=\"doc-anchor\" href=\"#iterator-over-all-the-bins\">§</a>Iterator over all the bins</h5>\n<p>In HistogramFloat a bin is defined by two values: The left border (inclusive)\nand the right border (exclusive)</p>\n<p>Here you get an iterator which iterates over said borders.\nThe Iterator returns a borrowed Array of length two, where the first value is the left (inclusive) border\nand the second value is the right (exclusive) border</p>\n<h6 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>sampling::histogram::<span class=\"kw-2\">*</span>;\n \n<span class=\"kw\">let </span>hist = HistogramFloat::&lt;f32&gt;::new(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2</span>).unwrap();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = hist.bin_iter();\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0.0</span>, <span class=\"number\">0.5</span>]));\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>]));\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_hits_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#136-144\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.bin_hits_iter\" class=\"fn\">bin_hits_iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">[T; 2]</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>)&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"iterate-over-all-bins\"><a class=\"doc-anchor\" href=\"#iterate-over-all-bins\">§</a>Iterate over all bins</h5>\n<p>In HistogramFloat a bin is defined by two values: The left border (inclusive)\nand the right border (exclusive)</p>\n<p>This Iterator iterates over these values as well as the corresponding hit count (\ni.e., how often a bin was hit)</p>\n<h6 id=\"item-of-iterator\"><a class=\"doc-anchor\" href=\"#item-of-iterator\">§</a>Item of Iterator</h6>\n<p>(&amp;[left_border, right_border], number_of_hits)</p>\n<h6 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>sampling::histogram::<span class=\"kw-2\">*</span>;\n \n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>hist = HistogramFloat::&lt;f64&gt;::new(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2</span>).unwrap();\n \nhist.increment_quiet(<span class=\"number\">0.5</span>);\nhist.increment_quiet(<span class=\"number\">0.71253782387</span>);\n \n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = hist.bin_hits_iter();\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">Some</span>((<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0.0</span>, <span class=\"number\">0.5</span>], <span class=\"number\">0</span>)));\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">Some</span>((<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>], <span class=\"number\">2</span>)));\n<span class=\"macro\">assert_eq!</span>(iter.next(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#150-153\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.increment\" class=\"fn\">increment</a>&lt;B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;mut self, val: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"increment-hit-count-of-bin\"><a class=\"doc-anchor\" href=\"#increment-hit-count-of-bin\">§</a>Increment hit count of bin</h5>\n<p>This will increment the hit count of the bin corresponding to the value <code>val</code>.\nIf the bin was valid it will return the index of the corresponding bin</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment_quiet\" class=\"method\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#159-162\">Source</a><h4 class=\"code-header\">pub fn <a href=\"sampling/histogram/struct.HistogramFloat.html#tymethod.increment_quiet\" class=\"fn\">increment_quiet</a>&lt;B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;mut self, val: B)</h4></section></summary><div class=\"docblock\"><h5 id=\"increment-hit-count\"><a class=\"doc-anchor\" href=\"#increment-hit-count\">§</a>Increment hit count</h5>\n<p>Increments the hit count of the bin corresponding to <code>val</code>.\nIf no bin corresponding to <code>val</code> exists, nothing happens</p>\n</div></details></div></details>",0,"sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistogramIntervalDistance%3CT%3E-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#291-315\">Source</a><a href=\"#impl-HistogramIntervalDistance%3CT%3E-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sampling/histogram/trait.HistogramIntervalDistance.html\" title=\"trait sampling::histogram::HistogramIntervalDistance\">HistogramIntervalDistance</a>&lt;T&gt; for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.interval_distance_overlap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#294-314\">Source</a><a href=\"#method.interval_distance_overlap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramIntervalDistance.html#tymethod.interval_distance_overlap\" class=\"fn\">interval_distance_overlap</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(\n    &amp;self,\n    val: V,\n    overlap: <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/num/nonzero/type.NonZeroUsize.html\" title=\"type core::num::nonzero::NonZeroUsize\">NonZeroUsize</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Distance metric for how far a value is from a valid interval <a href=\"sampling/histogram/trait.HistogramIntervalDistance.html#tymethod.interval_distance_overlap\">Read more</a></div></details></div></details>","HistogramIntervalDistance<T>","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HistogramVal%3CT%3E-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#199-289\">Source</a><a href=\"#impl-HistogramVal%3CT%3E-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"sampling/histogram/trait.HistogramVal.html\" title=\"trait sampling::histogram::HistogramVal\">HistogramVal</a>&lt;T&gt; for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_enum_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#283-288\">Source</a><a href=\"#method.bin_enum_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.bin_enum_iter\" class=\"fn\">bin_enum_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"sampling/histogram/enum.Bin.html\" title=\"enum sampling::histogram::Bin\">Bin</a>&lt;T&gt;&gt; + '_&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"consider-using-selfbin_iter-instead\"><a class=\"doc-anchor\" href=\"#consider-using-selfbin_iter-instead\">§</a>consider using <code>self.bin_iter()</code> instead</h5>\n<ul>\n<li>This gives you a dynamic iterator over all bins-</li>\n<li>For this type all bins are InclusiveExclusive -&gt; Usage of <code>self.bin_iter</code>\nis more efficient</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_val\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#203-208\">Source</a><a href=\"#method.count_val\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.count_val\" class=\"fn\">count_val</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;mut self, val: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class='docblock'>count val. <code>Ok(index)</code>, if inside of hist, <code>Err(_)</code> if val is invalid</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#210-223\">Source</a><a href=\"#method.distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.distance\" class=\"fn\">distance</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;self, val: V) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>calculates some sort of absolute distance to the nearest valid bin <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.distance\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first_border\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#226-228\">Source</a><a href=\"#method.first_border\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.first_border\" class=\"fn\">first_border</a>(&amp;self) -&gt; T</h4></section></summary><div class='docblock'>get the left most border (inclusive)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_border\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#231-233\">Source</a><a href=\"#method.last_border\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.last_border\" class=\"fn\">last_border</a>(&amp;self) -&gt; T</h4></section></summary><div class='docblock'>get last border from the right <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.last_border\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last_border_is_inclusive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#236-238\">Source</a><a href=\"#method.last_border_is_inclusive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.last_border_is_inclusive\" class=\"fn\">last_border_is_inclusive</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>True if last border is inclusive, false otherwise <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.last_border_is_inclusive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_inside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#240-243\">Source</a><a href=\"#method.is_inside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.is_inside\" class=\"fn\">is_inside</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;self, val: V) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>does a value correspond to a valid bin?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_inside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#245-249\">Source</a><a href=\"#method.not_inside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.not_inside\" class=\"fn\">not_inside</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;self, val: V) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>opposite of <code>is_inside</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_bin_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#252-277\">Source</a><a href=\"#method.get_bin_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sampling/histogram/trait.HistogramVal.html#tymethod.get_bin_index\" class=\"fn\">get_bin_index</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;T&gt;&gt;(&amp;self, val: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"sampling/histogram/enum.HistErrors.html\" title=\"enum sampling::histogram::HistErrors\">HistErrors</a>&gt;</h4></section></summary><div class='docblock'>convert val to the respective histogram index</div></details></div></details>","HistogramVal<T>","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-HistogramFloat%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#12\">Source</a><a href=\"#impl-Serialize-for-HistogramFloat%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"sampling/histogram/struct.HistogramFloat.html\" title=\"struct sampling::histogram::HistogramFloat\">HistogramFloat</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sampling/histogram/histogram_float.rs.html#12\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sampling::histogram::histogram_float::HistF32","sampling::histogram::histogram_float::HistF64"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[40104]}